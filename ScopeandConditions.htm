<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scope and Conditions</title>
</head>
<body>
    <div>    
        <ul>      <!--Shortcut fot this is div>ul>li{item-$}*7 isse poora bann jaega-->                                            -->
            <li>Iten-1</li>
            <li>Iten-2</li>
            <li>Iten-3</li>
            <li>Iten-4</li>
            <li>Iten-5</li>
            <li>Iten-6</li>
            <li>Iten-7</li>
        </ul>     
    </div> 
    <script>
        let a="u";
        {
            let a="u6";
            console.log(a);
        }
        console.log(a);
        const b="This cannot be changed"; //this can never be changed
        console.log(b);
        let age=2;
        // if(age>18)
        // console.log("U are allowed to drink");
        // else if(age==2)
        // {
        //     console.log("Age is 2");
        // }
        // else
        // console.log("u are not allowed to drink");
const cups=45;
switch (cups) {
    case 4:
        console.log("The value is 4"); // if break is removed and assume that value of cups is 4 then woh aur uske baad waale sab output me aa jaenge
        break;
        case 41:
        console.log("The value is 41");
        break;

        case 42:
        console.log("The value is 42");
        break;

        case 43:
        console.log("The value is 43");
        break;


    default:
        console.log("the value ofcups is none of these");
        break;
}
    </script>
</body>
</html>
<!-- scope of var is global but if it is written within functions the scope is only upto that function whereas the scope 
of let is block eg. if let a="u" and then let a"u6" this will give error but if we 
write let a="u"
if(
    let a="u6"
) no error since scope of let is block-->